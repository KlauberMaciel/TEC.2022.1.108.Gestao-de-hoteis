<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADcAAAA3CAYAAACo29JGAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAABE9JREFUaEPtWstu00AUzSf0E/opfEpUOVF3zQo5NhJtl5QdKhuktlI3lUBKY1sq
        UlJRUMOCV7oARBdJUSsKiwiXRagEizDHHieT8XU8ceI4kTjS2fiOPXMyd+7DTm7a0Cr6nRWrXCpYxm7B
        LjcLTvmiYBu9ENl1zS6/YGMqGI/7+CPmC1gYxGi24ZJCFOndj+dkLTRfKS1ptn5/UkGRtMoXK5ae59PN
        DhrcKC1RMmclMn+kL/vnhFhE2mQi8xV9mS9lupjpbkXT1ay7Jb6k6aDIzhYxUWbEWedLmwwFR2chnZ4k
        UzrGLl9iMqgIa1y967PWPiXHqLLWOh16HjVmiEkFqrqiiE73JzlGlZ2uy5/kgxojc2wXRfCgHkRRRBbi
        QOUg44d79agoIitxjK5SmoisBTl3m896H75/6n3ptDyK6P657V9PQhmibaf5lFxPQORfLoEGKgHqxoCN
        y/d82myA+al1BRzpnqN2DTs2D4jZQeaepSUuZ4DYXbvKdtcCxKUIrWqsc0kDxJ01+Uzoxw/IcdOmfrzF
        Z/ShkP9cLsmH14/RA/tcIHHIfYN+kOW1PWqQyEUSh4aXS2MuaZuxeU0Wt/X6iScwbWIeEUriAtdUcUlQ
        FpcVFMX5rqlZplKptXDiWAmZY/55SBllLpo479wVFF8byOKarARD7kubzR+f+Yw+lMXZRjPHiuSvhCFE
        WRwOOzVu2kwULUHLuGA7RxgILpw4xv/iwDhxa0ebvYOPTmRhi3xlndd7Gy8fkXYU5rhfrw8/dy7EiY0m
        RIg2vT68QAgV7bV2g1vQw7WHbHMhTsS5tEC5XdqVdld+tmibSNy0oiV+8QA7Z8OLX3u+2ev89ne2+/c2
        dO/BJ8ezAfVWY8iWWByPls2QgWCcOPAhc7fNV/SZwiIfv933hFJ23AvK15OK0yzjRKkjAFXEpcHk4vTD
        xLXl/ItjtSWqZ8ooc+HE2ff8hjVJPyeLQxDBe0uMk3MVWGXpAfaaFDBApArcd3nzrbf9Zn/Ylkzc4FXD
        NDpxMc/hvaZo22aBRIQsAEV4ALz7FG2JxImduIprxolDiA8Ql+cgVrSL4gDRlkRc3yUDxLlmnDjkKuSy
        y5vrkA1E+4IfQBYObrD0cfXr2rOjBBNt44orIr/JKFaNdWpwwDhxaXHsnbOM8PfzfGV9adTuLYI4ctcC
        FJ3onLcQO0ftmoio1w7yoUdQQHWfNuVgFCVu5K4FWD3Slyn3RECYB9Rb1Kdp011V/RsH5Z74FecBchoB
        NYeVWuOgaIejp3V+zKfIBphfXhNr2cJfdVRAVS5oS+pt/OuAfhWXBjEf1Q5hfXypyaDaEs2aEwsLQLlo
        lkzsilHwg0x895AuTXfs4KEKpImiY4z8ApsaLeNEOdxPAlQCsxOZ4m6NQroiTRdnvUT9O2GWQP/kR9VJ
        zyTbpaq5F+rH5gW+ULOk4bsfOydR70W965Z55onB+KkLyuX+AaHtDlOgZrALAAAAAElFTkSuQmCC
</value>
  </data>
</root>